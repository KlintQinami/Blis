@vertex vec4 vshader(uniform mat4x4 xform, vec3 pos)
{
  vec4 pos = vec4(pos.x, pos.y, pos.z, 1.);
  return xform * pos;
}

@fragment void fshader(out vec3 color)
{
  color = vec3(1., 0., 1.);
}

pipeline my_pipeline {
  @vertex vshader;
  @fragment fshader;
};

int main()
{
  window win = window(1024, 768, false);

  set_active_window(win);

  buffer<vec3> b = buffer<vec3>();

  upload_buffer(b,
    vec3[3](vec3(-1., -1., 0.),
            vec3(1.,  -1., 0.),
            vec3(0.,  1.,  0.)));

  pipeline my_pipeline p = pipeline my_pipeline();
  p.pos = b;
  p.xform = mat4x4(vec4(0.7, 0., 0., 0.),
                   vec4(0., 0.7, 0., 0.),
                   vec4(0., 0., 1., 0.),
                   vec4(0., 0., 0., 1.));

  while (true) {
    draw(p, 3);
    swap_buffers(win);
    poll_events();
    if (window_should_close(win))
      break;
  }

  return 0;
}
